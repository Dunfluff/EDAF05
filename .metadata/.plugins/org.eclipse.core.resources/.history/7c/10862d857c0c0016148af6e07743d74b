package closestPoints;


import java.awt.geom.Point2D;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.PriorityQueue;
import java.util.Scanner;

public class ClosestPoint {


	private ArrayList<CPoint> XPoints;
	private ArrayList<CPoint> YPoints;

	public ClosestPoint() {
		ArrayList<CPoint> points = new ArrayList();

	}

	public void readFile(String filename) {
		File file = new File(filename);
		Scanner scan = null;
		try {
			scan = new Scanner(file);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		while (scan.hasNext()) {
			String line = scan.nextLine();
			while (line.startsWith("1")) {
				String[] newLines = line.split(" ");
				XPoints.add(new CPoint(Double.parseDouble(newLines[1]), Double.parseDouble(newLines[2])));
				YPoints.add(new CPoint(Double.parseDouble(newLines[1]), Double.parseDouble(newLines[2])));
			}
		}
		Collections.sort(XPoints, CPoint.getCompByX());
		Collections.sort(YPoints, CPoint.getCompByY());
		scan.close();
	}
	
	public double solve(){
		return recSolve(XPoints, YPoints);
	}
	
	private double recSolve(ArrayList<CPoint> x, ArrayList<CPoint> y){
		HashSet<CPoint> all = new HashSet<CPoint>();
		all.addAll(x);
		all.addAll(y);
		CPoint[] points = null;
		if(all.size() <= 3){
			all.toArray(points);
			double first = points[0].getDist(points[1]);
			double second = points[0].getDist(points[2]);
			double third = points[1].getDist(points[2]);
		}
		
		
		
		
		return 0;
		
	}
	

}
