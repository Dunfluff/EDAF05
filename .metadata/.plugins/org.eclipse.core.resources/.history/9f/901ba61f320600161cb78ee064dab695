package spanning_USA;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;

public class Spanning_USA {
	static HashMap<String, LinkedList<City>> cities = new HashMap<String, LinkedList<City>>();
	
	
	
	public static void readFile(String filename) {
		File file = new File(filename);
		Scanner scan = null;
		try {
			scan = new Scanner(file);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		while (scan.hasNext()) {
			String line = scan.nextLine();
			if(!line.contains("[")){
				cities.put(line.trim(), new LinkedList<City>());
			}else{
				String[] newLines = line.split("--| \\[");
				String firstCity = newLines[0];
				String secondCity = newLines[1];
				int distance = Integer.parseInt(newLines[2].substring(1, newLines[2].length()-1));
				System.out.println(firstCity + " " + secondCity + " " + distance);
				cities.get(firstCity).add(new City(firstCity,secondCity, distance));
				cities.get(secondCity).add(new City(secondCity,firstCity, distance));
			}
		}
		scan.close();
	}
	
	public static int getMST() {
		int mst = 0;
		HashSet<String> visitedV = new HashSet<String>();
		String initialCity = cities.keySet().iterator().next();
		visitedV.add(initialCity);
		PriorityQueue<City> edgesQ = new PriorityQueue<City>();
		edgesQ.addAll(cities.get(initialCity));
		while (!edgesQ.isEmpty()) {
			City e = edgesQ.remove();
			if (!visitedV.contains(e.target)) {
				mst += e.weight;
				visitedV.add(e.target);
				edgesQ.addAll(cities.get(e.target));
			}
		}
		return mst;
	}
	
	public static void main(String[] args) {

		readFile("USA-highway-miles.txt");
		long start = System.currentTimeMillis();
		System.out.println(getMST());
//		System.out.println(System.currentTimeMillis() - start);
	}
}


